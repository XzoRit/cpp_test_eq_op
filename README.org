[[https://travis-ci.org/XzoRit/cpp_starter][https://travis-ci.org/XzoRit/cpp_starter.svg?branch=master]]
* template for c++ projects
This folder contains the project structure.
Clone this repository delete the .git folder rename the project folder to your project name.
** build files
Boost.Build and CMake build files are available.
*** Boost.Build
mkdir build_boost
**** build lib
b2 --build-dir=./build_boost -q toolset=gcc lib//lib
**** execute lib test
b2 --build-dir=./build_boost -q toolset=gcc lib//test
**** build application executeable
b2 --build-dir=./build_boost -q toolset=gcc app//exe
**** run application executeable
b2 --build-dir=./build_boost -q toolset=gcc app//run
*** CMake
**** configure
mkdir build_cmake
cmake -B ./build_cmake -S ./ -DCMAKE_C_COMPILER=gcc-9 -DCMAKE_CXX_COMPILER=g++-9
**** build
cmake --build ./build_cmake --target all
**** execute test and app with ctest
cd build_cmake && ctest --output-on-failure
ctest -R 'app::exe' --output-on-failure
ctest -R 'lib::test' --output-on-failure
** formatting
*** Clang-Format file is available.
*** cmake-format configuration
see [[https://github.com/cheshirekow/cmake_format][cmake-format]]
execute with: find . -type f -name 'CMakeLists.txt' -execdir cmake-format -i {} \;
** ci
Support for travis-ci is available.
** compile_comand.json
cmake is configured to produce a compile_comand.json.
Most tools expect it to be in the root directory of the project.
This is achived by creating a link:
ln -s Debug/compile_commands.json .
